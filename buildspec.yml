version: 0.2


phases:
  pre_build:
    commands:
      - mvn clean install
      - echo Logging in to Amazon ECR...
      - aws --version
      - AWS_ACCOUNT_ID=872583825157
      - AWS_DEFAULT_REGION=ap-southeast-1
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.ap-southeast-1.amazonaws.com/simpleapp-be
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - AWS_ACCOUNT_ID=872583825157
      - REPOSITORY_URI=$AWS_ACCOUNT_ID.dkr.ecr.ap-southeast-1.amazonaws.com/simpleapp-be
      - docker run -d -it --privileged {Image ID} /usr/sbin/init
      - systemctl start httpd.service
      - sudo service docker start
      - docker push 872583825157.dkr.ecr.ap-southeast-1.amazonaws.com:latest
      - docker push 872583825157.dkr.ecr.ap-southeast-1.amazonaws.com:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"order-service","imageUri":"%s"}]' 872583825157.dkr.ecr.ap-southeast-1.amazonaws.com:$IMAGE_TAG > imagedefinitions.json
      - cat imagedefinitions.json
      - aws eks update-kubeconfig --name bc-mgmt --region ap-southeast-1
      - kubectl apply -f simple-app-deployment.yaml
artifacts:
  files:
    - imagedefinitions.json
    - target/order-service.jar

